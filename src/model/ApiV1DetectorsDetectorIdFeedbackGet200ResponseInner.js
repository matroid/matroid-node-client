/**
 * Matroid Public API
 * The Matroid API allows you to easily manipulate and use detectors. You can browse through our fine-tuned detectors, customize detectors with your own images and videos, and even import your own tensorflow models as detectors. Public detectors are available for all of our users, and you can quickly train custom detectors when needed. You can further polish your detectors through our simple web GUI, where you can create composite detectors or topic detectors, give your detectors feedback, and automatically annotate training data.   Once you are happy with your detector, you can use it to classify images, locate objects in videos, and perform real-time detections in live video streams. Create a stream of your camera feed, and you can use our API to get real-time detections from your detector by creating Monitorings. You can also use our API to get the latest detections from your detector, and you can even get the latest detections from a specific time in the past. Feel free to use this documentation page to learn and test out your API requests. But be careful! **Any changes performed may be permanent.**   ## Getting Started  To get started with the Matroid API, you will need to create an account and obtain an API key. You can do this by signing up on our website. Once you have your API key, you can start using the API to create and manage detectors.  ## Authentication  The Matroid API uses bearer token authentication. You will need to include your API key in the Authorization header of your requests. For example:  ``` Authorization: Bearer YOUR_API_KEY ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf from './ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf';
import ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1 from './ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1';

/**
 * The ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner model module.
 * @module model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner
 * @version 1.0.0
 */
class ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner {
    /**
     * Constructs a new <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner</code>.
     * @alias module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner
     * @param {(module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf|module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1)} instance The actual instance to initialize ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf.validateJSON(instance); // throw an exception if no match
                // create ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf from JS object
                this.actualInstance = ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf
            errorMessages.push("Failed to construct ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf: " + err)
        }

        try {
            if (typeof instance === "ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1.validateJSON(instance); // throw an exception if no match
                // create ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1 from JS object
                this.actualInstance = ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1
            errorMessages.push("Failed to construct ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner` with oneOf schemas ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf, ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner` with oneOf schemas ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf, ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner} obj Optional instance to populate.
     * @return {module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner} The populated <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf</code>, <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1</code>.
     * @return {(module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf|module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf</code>, <code>ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1</code>.
     * @param {(module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf|module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner} An instance of ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.
     */
    static fromJSON = function(json_string){
        return ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The count of feedbacks with said label
 * @member {Number} count
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['count'] = undefined;

/**
 * The label name of the feedback
 * @member {String} label
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['label'] = undefined;

/**
 * The label name of the feedback
 * @member {String} _id
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['_id'] = undefined;

/**
 * The date the feedback was created
 * @member {Date} createdAt
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['createdAt'] = undefined;

/**
 * The type of feedback (e.g., \"negative\")
 * @member {String} feedback
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['feedback'] = undefined;

/**
 * Unique ID for the image used
 * @member {String} image
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['image'] = undefined;

/**
 * The label name of the feedback
 * @member {String} labelName
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['labelName'] = undefined;

/**
 * The detector's confidence in the label name
 * @member {Number} probability
 */
ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.prototype['probability'] = undefined;


ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner.OneOf = ["ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf", "ApiV1DetectorsDetectorIdFeedbackGet200ResponseInnerOneOf1"];

export default ApiV1DetectorsDetectorIdFeedbackGet200ResponseInner;

